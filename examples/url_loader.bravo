function loadUrl(p, url, callback, errback) {
  var urlRequestInfo = new p.URLRequestInfo();
  urlRequestInfo.setProperty(0, url);  // PP_URLREQUESTPROPERTY_URL
  urlRequestInfo.setProperty(1, 'GET');  // PP_URLREQUESTPROPERTY_METHOD
  urlRequestInfo.setProperty(5, true); // PP_URLREQUESTPROPERTY_RECORDDOWNLOADPROGRESS

  var s = '';
  var data = new Uint8Array(256);
  var urlLoader = new p.URLLoader();

  function loadMore(result) {
    p.log('progress: ' + JSON.stringify(urlLoader.getDownloadProgress()));

    if (result == 0) {
      callback(s);
      return;
    }


    if (result < 0) {
      errback(result);
    }

    for (var i = 0; i < result; i++) {
      s += String.fromCharCode(data[i]);
    }

    urlLoader.readResponseBody(data, loadMore);
  }

  urlLoader.open(urlRequestInfo, function(result) {
    if (result < 0) {
      errback(result);
      return;
    }

    urlLoader.readResponseBody(data, loadMore);
  });
}

function main(p) {
  var log = p.log.bind(p);

  try {
    loadUrl(p, 'test.bravo', function(s) {
      log('ok: ' + s);
    }, function(result) {
      log('error: ' + result);
    });

    // FIXME: This busy loop is a work around.
    var d = Date.now();
    while (Date.now() - d < 50) { }

    // log('close: ' + urlLoader.close());
  } catch (ex) {
    log(ex.message);
    log(ex.stack);
  }
}
